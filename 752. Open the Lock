from collections import deque

class Solution:
    def openLock(self, deadends, target):
        dead = set(deadends)
        if "0000" in dead:
            return -1

        queue = deque([("0000", 0)])
        visited = {"0000"}

        while queue:
            current, steps = queue.popleft()

            if current == target:
                return steps

            for i in range(4):
                digit = int(current[i])
                for move in [-1, 1]:
                    new_digit = (digit + move) % 10
                    new_combo = current[:i] + str(new_digit) + current[i+1:]
                    if new_combo not in dead and new_combo not in visited:
                        visited.add(new_combo)
                        queue.append((new_combo, steps + 1))

        return -1
